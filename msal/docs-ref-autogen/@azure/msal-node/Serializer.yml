### YamlMime:TSType
name: Serializer
uid: '@azure/msal-node.Serializer'
package: '@azure/msal-node'
summary: ''
fullName: Serializer
remarks: ''
isPreview: false
isDeprecated: false
type: class
methods:
  - name: serializeAccessTokens(AccessTokenCache)
    uid: '@azure/msal-node.Serializer.serializeAccessTokens'
    package: '@azure/msal-node'
    summary: Serializes AccessTokens
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function serializeAccessTokens(atCache: AccessTokenCache):
        Record<string, SerializedAccessTokenEntity>
      parameters:
        - id: atCache
          type: AccessTokenCache
          description: |+

      return:
        description: ''
        type: >-
          Record&lt;string, <xref
          uid="@azure/msal-node.SerializedAccessTokenEntity" />&gt;
  - name: serializeAccounts(AccountCache)
    uid: '@azure/msal-node.Serializer.serializeAccounts'
    package: '@azure/msal-node'
    summary: Serialize Accounts
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function serializeAccounts(accCache: AccountCache):
        Record<string, SerializedAccountEntity>
      parameters:
        - id: accCache
          type: AccountCache
          description: |+

      return:
        description: ''
        type: >-
          Record&lt;string, <xref uid="@azure/msal-node.SerializedAccountEntity"
          />&gt;
  - name: serializeAllCache(InMemoryCache)
    uid: '@azure/msal-node.Serializer.serializeAllCache'
    package: '@azure/msal-node'
    summary: Serialize the cache
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function serializeAllCache(inMemCache: InMemoryCache): JsonCache'
      parameters:
        - id: inMemCache
          type: <xref uid="@azure/msal-node.InMemoryCache" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/msal-node.JsonCache" />
  - name: serializeAppMetadata(AppMetadataCache)
    uid: '@azure/msal-node.Serializer.serializeAppMetadata'
    package: '@azure/msal-node'
    summary: Serialize amdtCache
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function serializeAppMetadata(amdtCache: AppMetadataCache):
        Record<string, SerializedAppMetadataEntity>
      parameters:
        - id: amdtCache
          type: AppMetadataCache
          description: |+

      return:
        description: ''
        type: >-
          Record&lt;string, <xref
          uid="@azure/msal-node.SerializedAppMetadataEntity" />&gt;
  - name: serializeIdTokens(IdTokenCache)
    uid: '@azure/msal-node.Serializer.serializeIdTokens'
    package: '@azure/msal-node'
    summary: Serialize IdTokens
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function serializeIdTokens(idTCache: IdTokenCache):
        Record<string, SerializedIdTokenEntity>
      parameters:
        - id: idTCache
          type: IdTokenCache
          description: |+

      return:
        description: ''
        type: >-
          Record&lt;string, <xref uid="@azure/msal-node.SerializedIdTokenEntity"
          />&gt;
  - name: serializeJSONBlob(JsonCache)
    uid: '@azure/msal-node.Serializer.serializeJSONBlob'
    package: '@azure/msal-node'
    summary: serialize the JSON blob
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function serializeJSONBlob(data: JsonCache): string'
      parameters:
        - id: data
          type: <xref uid="@azure/msal-node.JsonCache" />
          description: |+

      return:
        description: ''
        type: string
  - name: serializeRefreshTokens(RefreshTokenCache)
    uid: '@azure/msal-node.Serializer.serializeRefreshTokens'
    package: '@azure/msal-node'
    summary: Serialize refreshTokens
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function serializeRefreshTokens(rtCache: RefreshTokenCache):
        Record<string, SerializedRefreshTokenEntity>
      parameters:
        - id: rtCache
          type: RefreshTokenCache
          description: |+

      return:
        description: ''
        type: >-
          Record&lt;string, <xref
          uid="@azure/msal-node.SerializedRefreshTokenEntity" />&gt;
