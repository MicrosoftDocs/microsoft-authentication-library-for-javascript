### YamlMime:TSType
name: IPublicClientApplication
uid: '@azure/msal-node.IPublicClientApplication'
package: '@azure/msal-node'
summary: >-
  Interface for the PublicClientApplication class defining the public API
  signatures
fullName: IPublicClientApplication
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: acquireTokenByCode(AuthorizationCodeRequest)
    uid: '@azure/msal-node.IPublicClientApplication.acquireTokenByCode'
    package: '@azure/msal-node'
    summary: >-
      Acquires a token by exchanging the authorization code received from the
      first step of OAuth 2.0 Authorization Code Flow
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function acquireTokenByCode(request: AuthorizationCodeRequest):
        Promise<AuthenticationResult>
      parameters:
        - id: request
          type: <xref uid="@azure/msal-node.AuthorizationCodeRequest" />
          description: ''
      return:
        description: ''
        type: Promise&lt;AuthenticationResult&gt;
  - name: acquireTokenByDeviceCode(DeviceCodeRequest)
    uid: '@azure/msal-node.IPublicClientApplication.acquireTokenByDeviceCode'
    package: '@azure/msal-node'
    summary: Acquires a token from the authority using OAuth2.0 device code flow
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function acquireTokenByDeviceCode(request: DeviceCodeRequest):
        Promise<AuthenticationResult | null>
      parameters:
        - id: request
          type: <xref uid="@azure/msal-node.DeviceCodeRequest" />
          description: ''
      return:
        description: ''
        type: Promise&lt;AuthenticationResult | null&gt;
  - name: acquireTokenByRefreshToken(RefreshTokenRequest)
    uid: '@azure/msal-node.IPublicClientApplication.acquireTokenByRefreshToken'
    package: '@azure/msal-node'
    summary: >-
      Acquires a token by exchanging the refresh token provided for a new set of
      tokens
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function acquireTokenByRefreshToken(request: RefreshTokenRequest):
        Promise<AuthenticationResult | null>
      parameters:
        - id: request
          type: <xref uid="@azure/msal-node.RefreshTokenRequest" />
          description: ''
      return:
        description: ''
        type: Promise&lt;AuthenticationResult | null&gt;
  - name: acquireTokenByUsernamePassword(UsernamePasswordRequest)
    uid: '@azure/msal-node.IPublicClientApplication.acquireTokenByUsernamePassword'
    package: '@azure/msal-node'
    summary: >-
      Acquires tokens with password grant by exchanging client applications
      username and password for credentials
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function acquireTokenByUsernamePassword(request:
        UsernamePasswordRequest): Promise<AuthenticationResult | null>
      parameters:
        - id: request
          type: <xref uid="@azure/msal-node.UsernamePasswordRequest" />
          description: ''
      return:
        description: ''
        type: Promise&lt;AuthenticationResult | null&gt;
  - name: acquireTokenInteractive(InteractiveRequest)
    uid: '@azure/msal-node.IPublicClientApplication.acquireTokenInteractive'
    package: '@azure/msal-node'
    summary: Acquires a token interactively
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function acquireTokenInteractive(request: InteractiveRequest):
        Promise<AuthenticationResult>
      parameters:
        - id: request
          type: <xref uid="@azure/msal-node.InteractiveRequest" />
          description: ''
      return:
        description: ''
        type: Promise&lt;AuthenticationResult&gt;
  - name: acquireTokenSilent(SilentFlowRequest)
    uid: '@azure/msal-node.IPublicClientApplication.acquireTokenSilent'
    package: '@azure/msal-node'
    summary: >-
      Acquires a token silently when a user specifies the account the token is
      requested for
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function acquireTokenSilent(request: SilentFlowRequest):
        Promise<AuthenticationResult | null>
      parameters:
        - id: request
          type: <xref uid="@azure/msal-node.SilentFlowRequest" />
          description: ''
      return:
        description: ''
        type: Promise&lt;AuthenticationResult | null&gt;
  - name: clearCache()
    uid: '@azure/msal-node.IPublicClientApplication.clearCache'
    package: '@azure/msal-node'
    summary: Clear the cache
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function clearCache()
  - name: getAuthCodeUrl(AuthorizationUrlRequest)
    uid: '@azure/msal-node.IPublicClientApplication.getAuthCodeUrl'
    package: '@azure/msal-node'
    summary: Creates the URL of the authorization request
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAuthCodeUrl(request: AuthorizationUrlRequest):
        Promise<string>
      parameters:
        - id: request
          type: <xref uid="@azure/msal-node.AuthorizationUrlRequest" />
          description: ''
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: getLogger()
    uid: '@azure/msal-node.IPublicClientApplication.getLogger'
    package: '@azure/msal-node'
    summary: Returns the logger instance
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getLogger(): Logger'
      return:
        description: ''
        type: Logger
  - name: getTokenCache()
    uid: '@azure/msal-node.IPublicClientApplication.getTokenCache'
    package: '@azure/msal-node'
    summary: Gets the token cache for the application
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getTokenCache(): TokenCache'
      return:
        description: ''
        type: <xref uid="@azure/msal-node.TokenCache" />
  - name: setLogger(Logger)
    uid: '@azure/msal-node.IPublicClientApplication.setLogger'
    package: '@azure/msal-node'
    summary: >-
      Replaces the default logger set in configurations with new Logger with new
      configurations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setLogger(logger: Logger)'
      parameters:
        - id: logger
          type: Logger
          description: ''
