### YamlMime:TSType
name: DefaultStorageClass
uid: '@azure/msal-common.DefaultStorageClass'
package: '@azure/msal-common'
summary: ''
fullName: DefaultStorageClass
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: 'DefaultStorageClass(string, ICrypto, Logger)'
    uid: '@azure/msal-common.DefaultStorageClass.constructor'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new DefaultStorageClass(clientId: string, cryptoImpl: ICrypto, logger:
        Logger)
      parameters:
        - id: clientId
          type: string
          description: ''
        - id: cryptoImpl
          type: <xref uid="@azure/msal-common.ICrypto" />
          description: ''
        - id: logger
          type: <xref uid="@azure/msal-common.Logger" />
          description: ''
inheritedMethods:
  - name: 'accessTokenKeyMatchesFilter(string, CredentialFilter, boolean)'
    uid: '@azure/msal-common.DefaultStorageClass.accessTokenKeyMatchesFilter'
    package: '@azure/msal-common'
    summary: >-
      Validate the cache key against filter before retrieving and parsing cache
      value
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function accessTokenKeyMatchesFilter(inputKey: string, filter:
        CredentialFilter, keyMustContainAllScopes: boolean): boolean
      parameters:
        - id: inputKey
          type: string
          description: ''
        - id: filter
          type: <xref uid="@azure/msal-common.CredentialFilter" />
          description: ''
        - id: keyMustContainAllScopes
          type: boolean
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.accessTokenKeyMatchesFilter](xref:@azure/msal-common.CacheManager.accessTokenKeyMatchesFilter)
  - name: 'credentialMatchesFilter(ValidCredentialType, CredentialFilter)'
    uid: '@azure/msal-common.DefaultStorageClass.credentialMatchesFilter'
    package: '@azure/msal-common'
    summary: Returns whether or not the given credential entity matches the filter
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function credentialMatchesFilter(entity: ValidCredentialType, filter:
        CredentialFilter): boolean
      parameters:
        - id: entity
          type: <xref uid="@azure/msal-common.ValidCredentialType" />
          description: ''
        - id: filter
          type: <xref uid="@azure/msal-common.CredentialFilter" />
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.credentialMatchesFilter](xref:@azure/msal-common.CacheManager.credentialMatchesFilter)
  - name: generateAuthorityMetadataCacheKey(string)
    uid: '@azure/msal-common.DefaultStorageClass.generateAuthorityMetadataCacheKey'
    package: '@azure/msal-common'
    summary: returns cache key used for cloud instance metadata
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function generateAuthorityMetadataCacheKey(authority: string): string'
      parameters:
        - id: authority
          type: string
          description: ''
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.generateAuthorityMetadataCacheKey](xref:@azure/msal-common.CacheManager.generateAuthorityMetadataCacheKey)
  - name: 'getAccessToken(AccountInfo, BaseAuthRequest, TokenKeys)'
    uid: '@azure/msal-common.DefaultStorageClass.getAccessToken'
    package: '@azure/msal-common'
    summary: Retrieve AccessTokenEntity from cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccessToken(account: AccountInfo, request: BaseAuthRequest,
        tokenKeys?: TokenKeys): AccessTokenEntity | null
      parameters:
        - id: account
          type: <xref uid="@azure/msal-common.AccountInfo" />
          description: ''
        - id: request
          type: <xref uid="@azure/msal-common.BaseAuthRequest" />
          description: ''
        - id: tokenKeys
          type: <xref uid="@azure/msal-common.TokenKeys" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/msal-common.AccessTokenEntity" /> | null
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getAccessToken](xref:@azure/msal-common.CacheManager.getAccessToken)
  - name: getAccessTokensByFilter(CredentialFilter)
    uid: '@azure/msal-common.DefaultStorageClass.getAccessTokensByFilter'
    package: '@azure/msal-common'
    summary: Gets all access tokens matching the filter
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccessTokensByFilter(filter: CredentialFilter):
        AccessTokenEntity[]
      parameters:
        - id: filter
          type: <xref uid="@azure/msal-common.CredentialFilter" />
          description: ''
      return:
        description: ''
        type: '<xref uid="@azure/msal-common.AccessTokenEntity" />[]'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getAccessTokensByFilter](xref:@azure/msal-common.CacheManager.getAccessTokensByFilter)
  - name: getAccountInfoFilteredBy(AccountFilter)
    uid: '@azure/msal-common.DefaultStorageClass.getAccountInfoFilteredBy'
    package: '@azure/msal-common'
    summary: Gets accountInfo object based on provided filters
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccountInfoFilteredBy(accountFilter: AccountFilter):
        AccountInfo | null
      parameters:
        - id: accountFilter
          type: <xref uid="@azure/msal-common.AccountFilter" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/msal-common.AccountInfo" /> | null
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getAccountInfoFilteredBy](xref:@azure/msal-common.CacheManager.getAccountInfoFilteredBy)
  - name: getAccountsFilteredBy(AccountFilter)
    uid: '@azure/msal-common.DefaultStorageClass.getAccountsFilteredBy'
    package: '@azure/msal-common'
    summary: >-
      retrieve accounts matching all provided filters; if no filter is set, get
      all accounts

      not checking for casing as keys are all generated in lower case, remember
      to convert to lower case if object properties are compared
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccountsFilteredBy(accountFilter: AccountFilter):
        AccountEntity[]
      parameters:
        - id: accountFilter
          type: <xref uid="@azure/msal-common.AccountFilter" />
          description: ''
      return:
        description: ''
        type: '<xref uid="@azure/msal-common.AccountEntity" />[]'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getAccountsFilteredBy](xref:@azure/msal-common.CacheManager.getAccountsFilteredBy)
  - name: getAllAccounts()
    uid: '@azure/msal-common.DefaultStorageClass.getAllAccounts'
    package: '@azure/msal-common'
    summary: Returns all accounts in cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAllAccounts(): AccountInfo[]'
      return:
        description: ''
        type: '<xref uid="@azure/msal-common.AccountInfo" />[]'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getAllAccounts](xref:@azure/msal-common.CacheManager.getAllAccounts)
  - name: getAppMetadataFilteredBy(AppMetadataFilter)
    uid: '@azure/msal-common.DefaultStorageClass.getAppMetadataFilteredBy'
    package: '@azure/msal-common'
    summary: >-
      retrieve appMetadata matching all provided filters; if no filter is set,
      get all appMetadata
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAppMetadataFilteredBy(filter: AppMetadataFilter):
        AppMetadataCache
      parameters:
        - id: filter
          type: <xref uid="@azure/msal-common.AppMetadataFilter" />
          description: |+

      return:
        description: ''
        type: <xref uid="@azure/msal-common.AppMetadataCache" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getAppMetadataFilteredBy](xref:@azure/msal-common.CacheManager.getAppMetadataFilteredBy)
  - name: getAuthorityMetadataByAlias(string)
    uid: '@azure/msal-common.DefaultStorageClass.getAuthorityMetadataByAlias'
    package: '@azure/msal-common'
    summary: retrieve authorityMetadata that contains a matching alias
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAuthorityMetadataByAlias(host: string):
        AuthorityMetadataEntity | null
      parameters:
        - id: host
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/msal-common.AuthorityMetadataEntity" /> | null
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getAuthorityMetadataByAlias](xref:@azure/msal-common.CacheManager.getAuthorityMetadataByAlias)
  - name: 'getIdToken(AccountInfo, TokenKeys)'
    uid: '@azure/msal-common.DefaultStorageClass.getIdToken'
    package: '@azure/msal-common'
    summary: Retrieve IdTokenEntity from cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getIdToken(account: AccountInfo, tokenKeys?: TokenKeys):
        IdTokenEntity | null
      parameters:
        - id: account
          type: <xref uid="@azure/msal-common.AccountInfo" />
          description: ''
        - id: tokenKeys
          type: <xref uid="@azure/msal-common.TokenKeys" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/msal-common.IdTokenEntity" /> | null
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getIdToken](xref:@azure/msal-common.CacheManager.getIdToken)
  - name: 'getIdTokensByFilter(CredentialFilter, TokenKeys)'
    uid: '@azure/msal-common.DefaultStorageClass.getIdTokensByFilter'
    package: '@azure/msal-common'
    summary: Gets all idTokens matching the given filter
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getIdTokensByFilter(filter: CredentialFilter, tokenKeys?:
        TokenKeys): IdTokenEntity[]
      parameters:
        - id: filter
          type: <xref uid="@azure/msal-common.CredentialFilter" />
          description: ''
        - id: tokenKeys
          type: <xref uid="@azure/msal-common.TokenKeys" />
          description: ''
      return:
        description: ''
        type: '<xref uid="@azure/msal-common.IdTokenEntity" />[]'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getIdTokensByFilter](xref:@azure/msal-common.CacheManager.getIdTokensByFilter)
  - name: 'getRefreshToken(AccountInfo, boolean, TokenKeys)'
    uid: '@azure/msal-common.DefaultStorageClass.getRefreshToken'
    package: '@azure/msal-common'
    summary: Helper to retrieve the appropriate refresh token from cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getRefreshToken(account: AccountInfo, familyRT: boolean,
        tokenKeys?: TokenKeys): RefreshTokenEntity | null
      parameters:
        - id: account
          type: <xref uid="@azure/msal-common.AccountInfo" />
          description: ''
        - id: familyRT
          type: boolean
          description: |+

        - id: tokenKeys
          type: <xref uid="@azure/msal-common.TokenKeys" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/msal-common.RefreshTokenEntity" /> | null
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.getRefreshToken](xref:@azure/msal-common.CacheManager.getRefreshToken)
  - name: 'idTokenKeyMatchesFilter(string, CredentialFilter)'
    uid: '@azure/msal-common.DefaultStorageClass.idTokenKeyMatchesFilter'
    package: '@azure/msal-common'
    summary: >-
      Validate the cache key against filter before retrieving and parsing cache
      value
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function idTokenKeyMatchesFilter(inputKey: string, filter:
        CredentialFilter): boolean
      parameters:
        - id: inputKey
          type: string
          description: ''
        - id: filter
          type: <xref uid="@azure/msal-common.CredentialFilter" />
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.idTokenKeyMatchesFilter](xref:@azure/msal-common.CacheManager.idTokenKeyMatchesFilter)
  - name: 'isAccountKey(string, string, string)'
    uid: '@azure/msal-common.DefaultStorageClass.isAccountKey'
    package: '@azure/msal-common'
    summary: >-
      Returns true if the given key matches our account key schema. Also matches
      homeAccountId and/or tenantId if provided
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isAccountKey(key: string, homeAccountId?: string, tenantId?:
        string): boolean
      parameters:
        - id: key
          type: string
          description: ''
        - id: homeAccountId
          type: string
          description: ''
        - id: tenantId
          type: string
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.isAccountKey](xref:@azure/msal-common.CacheManager.isAccountKey)
  - name: isAppMetadataFOCI(string)
    uid: '@azure/msal-common.DefaultStorageClass.isAppMetadataFOCI'
    package: '@azure/msal-common'
    summary: Return the family_id value associated  with FOCI
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isAppMetadataFOCI(environment: string): boolean'
      parameters:
        - id: environment
          type: string
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.isAppMetadataFOCI](xref:@azure/msal-common.CacheManager.isAppMetadataFOCI)
  - name: isCredentialKey(string)
    uid: '@azure/msal-common.DefaultStorageClass.isCredentialKey'
    package: '@azure/msal-common'
    summary: Returns true if the given key matches our credential key schema.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isCredentialKey(key: string): boolean'
      parameters:
        - id: key
          type: string
          description: |+

      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.isCredentialKey](xref:@azure/msal-common.CacheManager.isCredentialKey)
  - name: readAccountFromCache(AccountInfo)
    uid: '@azure/msal-common.DefaultStorageClass.readAccountFromCache'
    package: '@azure/msal-common'
    summary: Retrieve AccountEntity from cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function readAccountFromCache(account: AccountInfo): AccountEntity |
        null
      parameters:
        - id: account
          type: <xref uid="@azure/msal-common.AccountInfo" />
          description: |+

      return:
        description: ''
        type: <xref uid="@azure/msal-common.AccountEntity" /> | null
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.readAccountFromCache](xref:@azure/msal-common.CacheManager.readAccountFromCache)
  - name: readAppMetadataFromCache(string)
    uid: '@azure/msal-common.DefaultStorageClass.readAppMetadataFromCache'
    package: '@azure/msal-common'
    summary: Retrieve AppMetadataEntity from cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function readAppMetadataFromCache(environment: string):
        AppMetadataEntity | null
      parameters:
        - id: environment
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/msal-common.AppMetadataEntity" /> | null
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.readAppMetadataFromCache](xref:@azure/msal-common.CacheManager.readAppMetadataFromCache)
  - name: 'readCacheRecord(AccountInfo, BaseAuthRequest, string)'
    uid: '@azure/msal-common.DefaultStorageClass.readCacheRecord'
    package: '@azure/msal-common'
    summary: Retrieve the cached credentials into a cacherecord
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function readCacheRecord(account: AccountInfo, request: BaseAuthRequest,
        environment: string): CacheRecord
      parameters:
        - id: account
          type: <xref uid="@azure/msal-common.AccountInfo" />
          description: ''
        - id: request
          type: <xref uid="@azure/msal-common.BaseAuthRequest" />
          description: ''
        - id: environment
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/msal-common.CacheRecord" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.readCacheRecord](xref:@azure/msal-common.CacheManager.readCacheRecord)
  - name: 'refreshTokenKeyMatchesFilter(string, CredentialFilter)'
    uid: '@azure/msal-common.DefaultStorageClass.refreshTokenKeyMatchesFilter'
    package: '@azure/msal-common'
    summary: >-
      Validate the cache key against filter before retrieving and parsing cache
      value
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function refreshTokenKeyMatchesFilter(inputKey: string, filter:
        CredentialFilter): boolean
      parameters:
        - id: inputKey
          type: string
          description: ''
        - id: filter
          type: <xref uid="@azure/msal-common.CredentialFilter" />
          description: |+

      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.refreshTokenKeyMatchesFilter](xref:@azure/msal-common.CacheManager.refreshTokenKeyMatchesFilter)
  - name: removeAccessToken(string)
    uid: '@azure/msal-common.DefaultStorageClass.removeAccessToken'
    package: '@azure/msal-common'
    summary: returns a boolean if the given credential is removed
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeAccessToken(key: string): Promise<void>'
      parameters:
        - id: key
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.removeAccessToken](xref:@azure/msal-common.CacheManager.removeAccessToken)
  - name: removeAccount(string)
    uid: '@azure/msal-common.DefaultStorageClass.removeAccount'
    package: '@azure/msal-common'
    summary: Removes the account and related tokens for a given account key
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeAccount(accountKey: string): Promise<void>'
      parameters:
        - id: accountKey
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.removeAccount](xref:@azure/msal-common.CacheManager.removeAccount)
  - name: removeAccountContext(AccountEntity)
    uid: '@azure/msal-common.DefaultStorageClass.removeAccountContext'
    package: '@azure/msal-common'
    summary: Removes credentials associated with the provided account
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeAccountContext(account: AccountEntity): Promise<void>'
      parameters:
        - id: account
          type: <xref uid="@azure/msal-common.AccountEntity" />
          description: |+

      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.removeAccountContext](xref:@azure/msal-common.CacheManager.removeAccountContext)
  - name: removeAllAccounts()
    uid: '@azure/msal-common.DefaultStorageClass.removeAllAccounts'
    package: '@azure/msal-common'
    summary: Removes all accounts and related tokens from cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeAllAccounts(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.removeAllAccounts](xref:@azure/msal-common.CacheManager.removeAllAccounts)
  - name: removeAppMetadata()
    uid: '@azure/msal-common.DefaultStorageClass.removeAppMetadata'
    package: '@azure/msal-common'
    summary: Removes all app metadata objects from cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeAppMetadata(): boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.removeAppMetadata](xref:@azure/msal-common.CacheManager.removeAppMetadata)
  - name: removeIdToken(string)
    uid: '@azure/msal-common.DefaultStorageClass.removeIdToken'
    package: '@azure/msal-common'
    summary: Removes idToken from the cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeIdToken(key: string)'
      parameters:
        - id: key
          type: string
          description: |+

    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.removeIdToken](xref:@azure/msal-common.CacheManager.removeIdToken)
  - name: removeRefreshToken(string)
    uid: '@azure/msal-common.DefaultStorageClass.removeRefreshToken'
    package: '@azure/msal-common'
    summary: Removes refresh token from the cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeRefreshToken(key: string)'
      parameters:
        - id: key
          type: string
          description: |+

    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.removeRefreshToken](xref:@azure/msal-common.CacheManager.removeRefreshToken)
  - name: saveCacheRecord(CacheRecord)
    uid: '@azure/msal-common.DefaultStorageClass.saveCacheRecord'
    package: '@azure/msal-common'
    summary: saves a cache record
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function saveCacheRecord(cacheRecord: CacheRecord): Promise<void>'
      parameters:
        - id: cacheRecord
          type: <xref uid="@azure/msal-common.CacheRecord" />
          description: |+

      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.saveCacheRecord](xref:@azure/msal-common.CacheManager.saveCacheRecord)
  - name: 'toObject<T>(T, object)'
    uid: '@azure/msal-common.DefaultStorageClass.toObject'
    package: '@azure/msal-common'
    summary: Helper to convert serialized data to object
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function toObject<T>(obj: T, json: object): T'
      parameters:
        - id: obj
          type: T
          description: ''
        - id: json
          type: object
          description: |+

      return:
        description: ''
        type: T
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CacheManager.toObject](xref:@azure/msal-common.CacheManager.toObject)
methods:
  - name: clear()
    uid: '@azure/msal-common.DefaultStorageClass.clear'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function clear(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: containsKey()
    uid: '@azure/msal-common.DefaultStorageClass.containsKey'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function containsKey(): boolean'
      return:
        description: ''
        type: boolean
  - name: getAccessTokenCredential()
    uid: '@azure/msal-common.DefaultStorageClass.getAccessTokenCredential'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAccessTokenCredential(): AccessTokenEntity'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.AccessTokenEntity" />
  - name: getAccount()
    uid: '@azure/msal-common.DefaultStorageClass.getAccount'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAccount(): AccountEntity'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.AccountEntity" />
  - name: getAccountKeys()
    uid: '@azure/msal-common.DefaultStorageClass.getAccountKeys'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAccountKeys(): string[]'
      return:
        description: ''
        type: 'string[]'
  - name: getAppMetadata()
    uid: '@azure/msal-common.DefaultStorageClass.getAppMetadata'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAppMetadata(): AppMetadataEntity'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.AppMetadataEntity" />
  - name: getAuthorityMetadata()
    uid: '@azure/msal-common.DefaultStorageClass.getAuthorityMetadata'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAuthorityMetadata(): AuthorityMetadataEntity | null'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.AuthorityMetadataEntity" /> | null
  - name: getAuthorityMetadataKeys()
    uid: '@azure/msal-common.DefaultStorageClass.getAuthorityMetadataKeys'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAuthorityMetadataKeys(): Array<string>'
      return:
        description: ''
        type: Array&lt;string&gt;
  - name: getIdTokenCredential()
    uid: '@azure/msal-common.DefaultStorageClass.getIdTokenCredential'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getIdTokenCredential(): IdTokenEntity'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.IdTokenEntity" />
  - name: getKeys()
    uid: '@azure/msal-common.DefaultStorageClass.getKeys'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getKeys(): string[]'
      return:
        description: ''
        type: 'string[]'
  - name: getRefreshTokenCredential()
    uid: '@azure/msal-common.DefaultStorageClass.getRefreshTokenCredential'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getRefreshTokenCredential(): RefreshTokenEntity'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.RefreshTokenEntity" />
  - name: getServerTelemetry()
    uid: '@azure/msal-common.DefaultStorageClass.getServerTelemetry'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getServerTelemetry(): ServerTelemetryEntity'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.ServerTelemetryEntity" />
  - name: getThrottlingCache()
    uid: '@azure/msal-common.DefaultStorageClass.getThrottlingCache'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getThrottlingCache(): ThrottlingEntity'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.ThrottlingEntity" />
  - name: getTokenKeys()
    uid: '@azure/msal-common.DefaultStorageClass.getTokenKeys'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getTokenKeys(): TokenKeys'
      return:
        description: ''
        type: <xref uid="@azure/msal-common.TokenKeys" />
  - name: removeItem()
    uid: '@azure/msal-common.DefaultStorageClass.removeItem'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeItem(): boolean'
      return:
        description: ''
        type: boolean
  - name: setAccessTokenCredential()
    uid: '@azure/msal-common.DefaultStorageClass.setAccessTokenCredential'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function setAccessTokenCredential()
  - name: setAccount()
    uid: '@azure/msal-common.DefaultStorageClass.setAccount'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function setAccount()
  - name: setAppMetadata()
    uid: '@azure/msal-common.DefaultStorageClass.setAppMetadata'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function setAppMetadata()
  - name: setAuthorityMetadata()
    uid: '@azure/msal-common.DefaultStorageClass.setAuthorityMetadata'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function setAuthorityMetadata()
  - name: setIdTokenCredential()
    uid: '@azure/msal-common.DefaultStorageClass.setIdTokenCredential'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function setIdTokenCredential()
  - name: setRefreshTokenCredential()
    uid: '@azure/msal-common.DefaultStorageClass.setRefreshTokenCredential'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function setRefreshTokenCredential()
  - name: setServerTelemetry()
    uid: '@azure/msal-common.DefaultStorageClass.setServerTelemetry'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function setServerTelemetry()
  - name: setThrottlingCache()
    uid: '@azure/msal-common.DefaultStorageClass.setThrottlingCache'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function setThrottlingCache()
  - name: updateCredentialCacheKey()
    uid: '@azure/msal-common.DefaultStorageClass.updateCredentialCacheKey'
    package: '@azure/msal-common'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function updateCredentialCacheKey(): string'
      return:
        description: ''
        type: string
extends: <xref uid="@azure/msal-common.CacheManager" />
