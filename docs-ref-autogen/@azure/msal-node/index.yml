### YamlMime:TSPackage
uid: '@azure/msal-node'
name: '@azure/msal-node'
summary: ''
type: package
interfaces:
  - '@azure/msal-node.ITokenCache'
  - '@azure/msal-node.ICacheClient'
  - '@azure/msal-node.IPartitionManager'
  - '@azure/msal-node.IConfidentialClientApplication'
  - '@azure/msal-node.IPublicClientApplication'
classes:
  - '@azure/msal-node.NodeStorage'
  - '@azure/msal-node.TokenCache'
  - '@azure/msal-node.DistributedCachePlugin'
  - '@azure/msal-node.Deserializer'
  - '@azure/msal-node.Serializer'
  - '@azure/msal-node.ClientApplication'
  - '@azure/msal-node.ClientAssertion'
  - '@azure/msal-node.ConfidentialClientApplication'
  - '@azure/msal-node.PublicClientApplication'
  - '@azure/msal-node.CryptoProvider'
  - '@azure/msal-node.GuidGenerator'
  - '@azure/msal-node.HashUtils'
  - '@azure/msal-node.PkceGenerator'
  - '@azure/msal-node.NodeAuthError'
  - '@azure/msal-node.HttpClient'
  - '@azure/msal-node.LoopbackClient'
  - '@azure/msal-node.EncodingUtils'
  - '@azure/msal-node.NetworkUtils'
typeAliases:
  - '@azure/msal-node.CacheKVStore'
  - '@azure/msal-node.InMemoryCache'
  - '@azure/msal-node.JsonCache'
  - '@azure/msal-node.SerializedAccessTokenEntity'
  - '@azure/msal-node.SerializedAccountEntity'
  - '@azure/msal-node.SerializedAppMetadataEntity'
  - '@azure/msal-node.SerializedIdTokenEntity'
  - '@azure/msal-node.SerializedRefreshTokenEntity'
  - '@azure/msal-node.CacheOptions'
  - '@azure/msal-node.Configuration'
  - '@azure/msal-node.NodeAuthOptions'
  - '@azure/msal-node.NodeConfiguration'
  - '@azure/msal-node.NodeSystemOptions'
  - '@azure/msal-node.NodeTelemetryOptions'
  - '@azure/msal-node.AuthorizationCodeRequest'
  - '@azure/msal-node.AuthorizationUrlRequest'
  - '@azure/msal-node.ClientCredentialRequest'
  - '@azure/msal-node.DeviceCodeRequest'
  - '@azure/msal-node.InteractiveRequest'
  - '@azure/msal-node.OnBehalfOfRequest'
  - '@azure/msal-node.RefreshTokenRequest'
  - '@azure/msal-node.SilentFlowRequest'
  - '@azure/msal-node.UsernamePasswordRequest'
functions:
  - name: >-
      buildAppConfiguration({ auth: { authority?: string, authorityMetadata?:
      string, azureCloudOptions?: AzureCloudOptions, clientAssertion?: string,
      clientCapabilities?: Array<string>, clientCertificate?: { privateKey:
      string, thumbprint: string, x5c?: string }, clientId: string,
      clientSecret?: string, cloudDiscoveryMetadata?: string, knownAuthorities?:
      Array<string>, protocolMode?: ProtocolMode, skipAuthorityMetadataCache?:
      boolean }, cache: { cachePlugin?: ICachePlugin }, system: {
      loggerOptions?: LoggerOptions, networkClient?: INetworkModule, proxyUrl?:
      string }, telemetry: { application?: ApplicationTelemetry } })
    uid: '@azure/msal-node.buildAppConfiguration'
    package: '@azure/msal-node'
    summary: Sets the default options when not explicitly configured from app developer
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function buildAppConfiguration(__namedParameters: { auth: { authority?:
        string, authorityMetadata?: string, azureCloudOptions?:
        AzureCloudOptions, clientAssertion?: string, clientCapabilities?:
        Array<string>, clientCertificate?: { privateKey: string, thumbprint:
        string, x5c?: string }, clientId: string, clientSecret?: string,
        cloudDiscoveryMetadata?: string, knownAuthorities?: Array<string>,
        protocolMode?: ProtocolMode, skipAuthorityMetadataCache?: boolean },
        cache: { cachePlugin?: ICachePlugin }, system: { loggerOptions?:
        LoggerOptions, networkClient?: INetworkModule, proxyUrl?: string },
        telemetry: { application?: ApplicationTelemetry } }): NodeConfiguration
      parameters:
        - id: __namedParameters
          type: >-
            { auth: { authority?: string, authorityMetadata?: string,
            azureCloudOptions?: AzureCloudOptions, clientAssertion?: string,
            clientCapabilities?: Array&lt;string&gt;, clientCertificate?: {
            privateKey: string, thumbprint: string, x5c?: string }, clientId:
            string, clientSecret?: string, cloudDiscoveryMetadata?: string,
            knownAuthorities?: Array&lt;string&gt;, protocolMode?: ProtocolMode,
            skipAuthorityMetadataCache?: boolean }, cache: { cachePlugin?:
            ICachePlugin }, system: { loggerOptions?: LoggerOptions,
            networkClient?: INetworkModule, proxyUrl?: string }, telemetry: {
            application?: ApplicationTelemetry } }
          description: ''
      return:
        description: Configuration
        type: <xref uid="@azure/msal-node.NodeConfiguration" />
enums:
  - '@azure/msal-node.ApiId'
  - '@azure/msal-node.HttpMethod'
  - '@azure/msal-node.HttpStatus'
